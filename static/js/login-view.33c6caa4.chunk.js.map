{"version":3,"sources":["views/LoginView/LoginView.module.css","views/LoginView/LoginView.js"],"names":["module","exports","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","LoginView","classes","dispatch","useDispatch","useState","email","setEmail","password","setPassword","loadingAuth","useSelector","loading","errorAuth","error","handleChange","event","target","name","value","container","component","className","item","xs","sm","md","Paper","elevation","square","variant","s","noValidate","onSubmit","preventDefault","authOperations","logIn","autoComplete","required","fullWidth","id","label","autoFocus","onChange","color"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,2B,uPCiBpBC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,OAAQ,SAEVC,MAAO,CACLC,gBAAiB,0CACjBC,iBAAkB,YAClBC,gBACyB,UAAvBN,EAAMO,QAAQC,KACVR,EAAMO,QAAQE,KAAK,IACnBT,EAAMO,QAAQE,KAAK,KACzBC,eAAgB,QAChBC,mBAAoB,UAEtBC,MAAO,CACLC,OAAQb,EAAMc,QAAQ,EAAG,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNL,OAAQb,EAAMc,QAAQ,GACtBR,gBAAiBN,EAAMO,QAAQY,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPC,UAAWvB,EAAMc,QAAQ,IAE3BU,OAAQ,CACNX,OAAQb,EAAMc,QAAQ,EAAG,EAAG,QAIjB,SAASW,IACtB,IAAMC,EAAU5B,IAEV6B,EAAWC,cAHiB,EAIRC,mBAAS,IAJD,mBAI3BC,EAJ2B,KAIpBC,EAJoB,OAKFF,mBAAS,IALP,mBAK3BG,EAL2B,KAKjBC,EALiB,KAM5BC,EAAcC,YAAYC,KAC1BC,EAAYF,YAAYG,KAExBC,EAAe,SAAAC,GAAU,IAAD,EACJA,EAAMC,OAAtBC,EADoB,EACpBA,KAAMC,EADc,EACdA,MACd,OAAQD,GACN,IAAK,QACH,OAAOX,EAASY,GAClB,IAAK,WACH,OAAOV,EAAYU,GACrB,QACE,SAWN,OACE,eAAC,IAAD,CAAMC,WAAS,EAACC,UAAU,OAAOC,UAAWpB,EAAQzB,KAApD,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAM8C,MAAI,EAACC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGJ,UAAWpB,EAAQvB,QACvD,cAAC,IAAD,CAAM4C,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGL,UAAWM,IAAOC,UAAW,EAAGC,QAAM,EAAvE,SACE,sBAAKP,UAAWpB,EAAQd,MAAxB,UACE,cAAC,IAAD,CAAQkC,UAAWpB,EAAQR,OAA3B,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAY2B,UAAU,KAAKS,QAAQ,KAAnC,oBAGCjB,GACC,qBAAKS,UAAWS,IAAEjB,MAAlB,0DAIF,uBACEQ,UAAWpB,EAAQL,KACnBmC,YAAU,EACVC,SA3BW,SAAAjB,GACnBA,EAAMkB,iBACN/B,EAASgC,IAAeC,MAAM,CAAE9B,QAAOE,cACvCD,EAAS,IACTE,EAAY,KAwBJ4B,aAAa,MAJf,UAME,cAAC,IAAD,CACEP,QAAQ,WACRzC,OAAO,SACPiD,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNvB,KAAK,QACLmB,aAAa,QACbK,WAAS,EACTvB,MAAOb,EACPqC,SAAU5B,IAEZ,cAAC,IAAD,CACEe,QAAQ,WACRzC,OAAO,SACPiD,UAAQ,EACRC,WAAS,EACTrB,KAAK,WACLuB,MAAM,WACNzD,KAAK,WACLwD,GAAG,WACHH,aAAa,mBACblB,MAAOX,EACPmC,SAAU5B,IAEXL,EACC,cAAC,IAAD,IAEA,cAAC,IAAD,CACE1B,KAAK,SACLuD,WAAS,EACTT,QAAQ,YACRc,MAAM,UACNtB,UAAWpB,EAAQF,OALrB","file":"static/js/login-view.33c6caa4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"LoginView_error__3sxmg\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport authOperations from '../../redux/auth/auth-operations';\nimport Loader from '../../Components/Loader/Loader';\nimport { loading } from '../../redux/auth/auth-selectors';\nimport { error } from '../../redux/auth/auth-selectors';\nimport s from './LoginView.module.css';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light'\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function LoginView() {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const loadingAuth = useSelector(loading);\n  const errorAuth = useSelector(error);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Log in\n          </Typography>\n          {errorAuth && (\n            <div className={s.error}>\n              Check your email or password, and try again!\n            </div>\n          )}\n          <form\n            className={classes.form}\n            noValidate\n            onSubmit={handleSubmit}\n            autoComplete=\"off\"\n          >\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              value={email}\n              onChange={handleChange}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={handleChange}\n            />\n            {loadingAuth ? (\n              <Loader />\n            ) : (\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Log in\n              </Button>\n            )}\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n"],"sourceRoot":""}